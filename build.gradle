plugins {
    id "com.github.spotbugs" version "1.6.1"
    id "org.springframework.boot" version "2.0.3.RELEASE"
    id "io.spring.dependency-management" version "1.0.5.RELEASE"
    id "com.palantir.docker" version "0.19.2"
    id "org.owasp.dependencycheck" version "3.1.2"
}

version = '0.0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'com.github.spotbugs'
apply plugin: 'eclipse'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
}

spotbugs {
    toolVersion = '3.1.3'
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
        csv.enabled false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.7
            }
        }
    }
}

checkstyle {
    configDir rootProject.file('config/checkstyle')
    configFile rootProject.file('config/checkstyle/checkstyle.xml')
    toolVersion = "7.6.1"
}

test {
    useJUnitPlatform()

    testLogging {
        events "passed", "skipped", "failed"
    }

    finalizedBy jacocoTestReport, jacocoTestCoverageVerification
}

processResources {
    filesMatching("**/version.properties") {
        def nowUtc = java.time.ZonedDateTime.now(java.time.ZoneId.of("UTC"))
        def nowNz = java.time.ZonedDateTime.now(java.time.ZoneId.of("Pacific/Auckland"))
        def projectBranch = "BRANCH not provided"
        if (project.hasProperty("BRANCH")) {
            projectBranch = project.property("BRANCH")
        }
        def projectCommitTag = "TAG not provided"
        if (project.hasProperty("TAG")) {
            projectCommitTag = project.property("TAG")
        }
        printf("processing resources TAG is [%s]\n", projectCommitTag)
        printf("processing resources BRANCH is [%s]\n", projectBranch)
        printf("UTC time is [%s]\n", nowUtc)
        printf("Auckland time is [%s]\n", nowNz)
        expand(
            "projectVersion": rootProject.version,
            "gitCodeVersion": projectCommitTag,
            "gitBranch": projectBranch,
            "buildTimestamp": nowNz.toString(),
            "buildTimestampUtc": nowUtc.toString()
        )
    }
}

if (!project.hasProperty("REPOSITORY_URI")) {
    ext.REPOSITORY_URI = jar.baseName
}

if (!project.hasProperty("TAG")) {
    ext.TAG = jar.version
}

if (!project.hasProperty("APPLICATION_CONTEXT")) {
    ext.APPLICATION_CONTEXT = "/"
}

docker {
    name "${REPOSITORY_URI}"
    tags "${TAG}", 'latest'
    files jar.archivePath
    buildArgs([
        'JAR_FILE': "${bootJar.archiveName}",
        'APPLICATION_CONTEXT': "${APPLICATION_CONTEXT}"
    ])
}

dependencies {
    def dropwizardVersion = '4.0.0'
    def springBootVersion = '2.0.3.RELEASE'

    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
    implementation group: 'com.github.spotbugs', name: 'spotbugs-annotations', version: '3.1.0'
    implementation group: 'io.dropwizard.metrics', name: 'metrics-core', version: dropwizardVersion
    implementation group: 'io.dropwizard.metrics', name: 'metrics-healthchecks', version: dropwizardVersion
    implementation group: 'io.dropwizard.metrics', name: 'metrics-servlets', version: dropwizardVersion
    implementation group: 'io.dropwizard.metrics', name: 'metrics-jvm', version: dropwizardVersion

    testCompile('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.18.3'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.9.0'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion

    // Remove once Mockito 3.x gets released with Junit 5 support
    testImplementation 'name.falgout.jeffrey.testing.junit5:mockito-extension:1.0.1'
}
